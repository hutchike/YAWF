#!/usr/bin/env php
<?
// Copyright (c) 2009 Guanoo, Inc.
// 
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 3
// of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.

class YAWF_admin
{
    # Constants

    const DEFAULT_ADDRESS = '127.0.0.1:80';

    # Properties

    protected $root;    // root directory from $YAWF_ROOT environment variable
    protected $prog;    // the name of this program (e.g. "./admin/yawf")
    protected $cmd;     // the command to run (e.g. "app")
    protected $args;    // arguments to the command (e.g. "my_new_app")

    # Methods

    public function __construct()
    {
        $this->root = $_SERVER['YAWF_ROOT'];
        if (!$this->root) $this->quit("Please set the YAWF_ROOT environment variable\nto the folder name where YAWF may be found on\nyour computer, e.g. ~/Sites/YAWF");

        global $argv;
        $this->prog = array_shift($argv);
        $this->cmd = array_shift($argv);
        $this->args = $argv;
    }

    // Run the chosen command

    public function run()
    {
        switch (strtolower($this->cmd))
        {
            case 'app':
                $this->create_app($this->args[0]);
                break;

            case 'vhost':
                $this->create_vhost_file($this->args);
                break;

            default:
                $this->usage();
        }
    }

    // Display a usage message, defaulting to the standard help message

    private function usage($cmd = '', $message = '')
    {
        if ($cmd && $message) die("\nusage: $cmd\n\n$message\n\n");
        $usage = <<<End_of_usage
usage: yawf ACTION [arg1 arg2 ...]

where ACTION is one of:
* app    : Create a new YAWF application
* vhost  : Create a virtual host file
* help   : Display this help message
End_of_usage;
        die("\n$usage\n\n");
    }

    // Create a new YAWF app with a name

    private function create_app($name)
    {
        if (!$name) $this->usage('yawf app myapp.org', 'You need to choose a name for your new app, e.g. "myapp.org"');

        $template = "$this->root/apps/template.app";
        $new_app = "$this->root/apps/$name";
        if (file_exists("$new_app")) $this->quit("Sorry but the app \"$name\" already exists in this folder:\n$new_app");

        mkdir("$new_app");
        copy("$template/index.php", "$new_app/index.php");
        $this->recurse_copy("$template/app", "$new_app/app");
        symlink("$this->root/yawf", "$new_app/yawf");
    }

    // Create a new YAWF virtual host file

    private function create_vhost_file($args)
    {
        list ($domain_name, $app_name, $address1, $address2) = $args;
        if (!$app_name) $app_name = $domain_name;
        if (!file_exists("$this->root/apps/$app_name")) $this->usage('yawf vhost myapp.org myapp', "App \"$app_name\" does not exist in the apps directory here:\n$this->root/apps");
        if (!$address1) $address1 = self::DEFAULT_ADDRESS;
        if (!$address2) $address2 = $address1;
        $comment = ($address1 == $address2 ? '# ' : '');

        if (!$domain_name) $this->usage('yawf vhost myapp.org', 'You need to choose a domain name for your new vhost file, e.g. "myapp.org"');

        $template_file = "$this->root/admin/template.vhost";
        $template = file_get_contents($template_file);
        $patterns = array('/{ADDRESS1}/', '/{ADDRESS2}/', '/{APACHE_LOGS_DIR}/', '/{APP}/', '/{DOMAIN}/', '/{YAWF_ROOT}/', '/{#}/');
        $replacements = array($address1, $address2, "$this->root/logs", $app_name, $domain_name, $this->root, $comment);
        $config = preg_replace($patterns, $replacements, $template);
        $vhost_file = "$this->root/vhosts/$domain_name";
        file_put_contents($vhost_file, $config);
        $this->quit("A new vhost file has been created here:\n$vhost_file");
    }

    private function recurse_copy($src, $dst)
    {
        $dir = opendir($src);
        mkdir($dst);
        while( FALSE !== ($file = readdir($dir)) )
        {
            if (($file != '.') && ($file != '..'))
            {
                is_dir("$src/$file") ?
                    $this->recurse_copy("$src/$file", "$dst/$file") :
                    copy("$src/$file", "$dst/$file");
            }
        }
        closedir($dir);
    } 

    // Display a message and quit

    private function quit($message)
    {
        die("\n$message\n\n");
    }
}

$admin = new YAWF_admin();
$admin->run();

// End of "admin/yawf"
